{"version":3,"sources":["components/TagClass.jsx","components/CardContainer.jsx","components/TagSkill.jsx","components/Area.jsx","components/Thumb.jsx","components/Header.jsx","components/Link.jsx","components/Grid.jsx","components/Card.jsx","components/TagFunction.jsx","App.js","index.js","components/Example1.jsx"],"names":["TagClass","Component","props","onTagClicked","console","log","name","setState","selected","state","color","className","this","size","onClick","icon","TagSkill","level","Area","title","warn","children","Image","style","backgroundImage","avatar","alt","Header","lastname","jobPosition","company","isEmph","Thumb","href","link","url","logo","Grid","Card","getEmph","i","elem","skills","selectedSkill","description","map","skill","index","Object","keys","favourites","favName","links","email","TagFunction","clickCallback","ExampleSomething","require","App","skillArray","data","reduce","prevSkills","currElem","concat","useState","setSelectedSkill","skillSet","Set","Array","from","callbackSelectedSkill","Example1","Example3","id","rootElement","document","getElementById","createRoot","render","Example2"],"mappings":"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","file":"static/js/main.7d5d81ca.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass TagClass extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {selected:false, color:\"red\"};\n    }\n\n    onTagClicked = () => {\n        console.log(\"Clicked on \", this.props.name)\n        this.setState({selected: !this.state.selected})\n    }\n\n    render() {\n\n        return (\n            <span className={\"pc-tag\" +\n                ( this.state.selected ? \" pc-tag--selected\" : \"\") +\n                (this.props.size === \"big\" ? \" pc-tag--big\" : \"\")\n            } onClick={ () => { this.onTagClicked() } }>\n                <i className={\"fa \" + this.props.icon} />\n            &nbsp;{this.props.name}</span>\n        )\n    }\n  }\n\nexport default TagClass;","import { Component } from \"react\";\nimport data from \"../utils/data.json\";\n\nclass CardContainer extends Component {\n  componentDidMount() {\n    const target = document.getElementById(\"card-container\");\n    target.innerHTML = \"\";\n    for (var index in data) {\n      const elem = data[index];\n      const domElem = \"<div>\" + elem.name + \" \" + elem.lastname + \"</div>\";\n      target.innerHTML = target.innerHTML + domElem;\n    }\n  }\n\n  render() {\n    return <div className=\"card-container\" id=\"card-container\" />;\n  }\n}\n\nexport default CardContainer;\n","import {Component} from \"react\";\n\nclass TagSkill extends Component {\n    render() {\n        return (\n            <div className={\"pc-skill\" + ( this.props.selected ? \" pc-skill__level--color\" : \" \")}>\n                <span>{this.props.name}&nbsp;</span>\n                <span className={\"pc-skill__level\" + ( this.props.selected ? \" pc-skill__level--color\" : \" \")}>\n                  <i className={\"far fa-star\"}/> {this.props.level}\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default TagSkill;\n","import { Component } from \"react\";\r\n\r\nclass Area extends Component {\r\n  render() {\r\n    if (!this.props.title) {\r\n      console.warn(\"No title in area!!!\");\r\n    }\r\n    return (\r\n      <div className=\"pc-area\">\r\n        <h3 className={\"pc-area__title\"}>{this.props.title}</h3>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Area;\r\n","import * as React from \"react\";\nimport { Component } from \"react\";\n\nclass Image extends Component {\n  render() {\n    return (\n      <div className=\"pc-thumb-container\">\n        <div\n          className=\"pc-thumb\"\n          style={{\n            backgroundImage: `url(/img/${this.props.avatar})`\n          }}\n          alt={this.props.name}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import Thumb from \"./Thumb\";\n\nexport default function Header({\n                                 name,\n                                 lastname,\n                                 avatar,\n                                 jobPosition,\n                                 company,\n                                 isEmph\n                               }) {\n  return (\n      <>\n        <div className={isEmph ? \"pc-header pc-header--emph\" : \"pc-header\"}>\n          <div>\n            <h3 className=\"pc-title\">\n              {lastname} {name}\n            </h3>\n            <h3 className=\"pc-subtitle\">\n              {jobPosition} @ {company}\n            </h3>\n          </div>\n        </div>\n        <Thumb avatar={avatar} name={name} />\n      </>\n  );\n}\n","import * as React from \"react\";\nimport { Component } from \"react\";\n\nexport default class TagClass extends Component {\n  /*constructor(props) {\n    super(props);\n    // this.state = { clicked: false }\n  }*/\n\n  render() {\n    return (\n      <a href={this.props.link.url} className=\"pc-uc__link\">\n        {this.props.link.logo && (\n          <span className={\"pc-uc__link-logo\"}>\n            <i className={this.props.link.logo} />\n          </span>\n        )}&nbsp;\n        {this.props.link.name}\n      </a>\n    );\n  }\n}\n","import {Component} from \"react\";\n\nclass Grid extends Component {\n    render() {\n        return (\n            <div className={\"pc-grid\"}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Grid;\n","import { Component } from \"react\";\n\nimport TagClass from \"./TagClass\";\nimport TagSkill from \"./TagSkill\";\nimport Area from \"./Area\";\nimport Header from \"./Header\";\nimport Link from \"./Link\";\nimport Grid from \"./Grid\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  getEmph = () => {\n      var isEmph = false;\n\n      for (let i in this.props.elem.skills) {\n            if (this.props.elem.skills[i].name === this.props.selectedSkill) {\n                isEmph = true\n            }\n      }\n\n      return isEmph\n  }\n\n  render() {\n    return (\n      <div className={\"pc-card\" + (this.getEmph() ? \" pc-card--skill_emp\" : \" \")}\n      >\n          <Header\n              name={this.props.elem.name}\n              lastname={this.props.elem.lastname}\n              avatar={this.props.elem.avatar}\n              jobPosition={this.props.elem.jobPosition}\n              company={this.props.elem.company}\n              isEmph={this.getEmph()}\n          />\n\n          <Area title=\"About\">\n              {this.props.elem.description}\n          </Area>\n\n        <Area title=\"Skills\">\n            <Grid>\n                {this.props.elem.skills.map((skill, index) => {\n                  return (\n                      <TagSkill key={index}\n                                name={skill.name}\n                                level={skill.level}\n                                selected={skill.name === this.props.selectedSkill  }\n                      />\n                  );\n                })}\n            </Grid>\n        </Area>\n\n\n        <Area title=\"Favourites\">\n         \n            {Object.keys(this.props.elem.favourites).map((favName, index) => {\n              return (\n                <TagClass key={index}\n                  name={this.props.elem.favourites[favName].name}\n                  icon={this.props.elem.favourites[favName].icon}\n                />\n              );\n            })}\n         \n        </Area>\n\n        <Area title=\"Links\">\n            {this.props.elem.links.map((link, index) => {\n                return <Link key={link.name + \"_\" + index} link={link} />;\n            })}\n            {this.props.elem.email && <Link key={this.props.elem.email} link={\n                {\n                    name: this.props.elem.email,\n                    logo: \"fa fa-envelope\",\n                    url: `mailto:${this.props.elem.email}`\n                }\n            } />}\n        </Area>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","const TagFunction = (props) => {\n    const onTagClicked = () => {\n        console.log(\"Clicked on \", props.name)\n        props.clickCallback && props.clickCallback(props.name)\n    }\n\n    return (\n            <span className={\"pc-tag\" +\n                ( props.selected ? \" pc-tag--selected\" : \"\") +\n                (props.size === \"big\" ? \" pc-tag--big\" : \"\")\n            }\n                  onClick={ () => { onTagClicked() } }>\n                <i className={\"fa \" + props.icon} />\n            &nbsp;{props.name}</span>\n        )\n  }\n\nexport default TagFunction;","import \"./styles.css\";\nimport CardContainer from \"./components/CardContainer\";\nimport Card from \"./components/Card\";\nimport data from \"./utils/data.json\";\nimport Area from \"./components/Area\";\nimport Example1WithOtherName from \"./components/Example1\"\nimport {Example2} from \"./components/Example1\"\nimport {Example2 as Example2WithOtherName} from \"./components/Example1\"\nimport * as AllNamedExamples from \"./components/Example1\"\nconst ExampleSomething = require(\"./components/Example1\")\n\nimport {useState} from \"react\"\nimport TagFunction from \"./components/TagFunction\";\n\nexport default function App() {\n    const skillArray = data.reduce((prevSkills, currElem) => prevSkills.concat(currElem.skills.map(\n        (skill, index) => skill.name\n    )), [])\n\n    const [selectedSkill, setSelectedSkill] = useState(null)\n\n    const skillSet = new Set(skillArray)\n\n    const callbackSelectedSkill = (name) => {\n        console.log(\"App says: you click on \", name)\n        setSelectedSkill(name)\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Let's get to know each other (ugly version v4)</h1>\n            <h2>We can build a card to present ourselves</h2>\n            {/* example of imperative approach <CardContainer />*/}\n            <Area title={\"Overall skills\"}>\n                {Array.from(skillSet).map((skill, index) => {\n                    return <TagFunction\n                        key={index}\n                        name={skill}\n                        icon={\"fa-light fa-atom\"}\n                        size={\"big\"}\n                        clickCallback={ (name) => { callbackSelectedSkill(name) }}\n                        selected={skill === selectedSkill}\n                    />\n                })}\n            </Area>\n            <div className=\"pc-card-container\">\n                <Example1WithOtherName>\n                    Test of Example1WithOtherName\n                </Example1WithOtherName>\n                <Example2>\n                    Test of Example2\n                </Example2>\n                <Example2WithOtherName>\n                    Test of Example2WithOtherName\n                </Example2WithOtherName>\n                <AllNamedExamples.Example2>\n                    Test of AllNamedExamples.Example2\n                </AllNamedExamples.Example2>\n                <AllNamedExamples.Example3>\n                    Test of AllNamedExamples.Example3\n                </AllNamedExamples.Example3>\n                <ExampleSomething.Example3>\n                    Test of ExampleSomething\n                </ExampleSomething.Example3>\n            </div>\n            <div className=\"pc-card-container\">\n                {data.map((elem) => {\n                    return <Card key={elem.id} elem={elem} selectedSkill={selectedSkill}/>;\n                })}\n            </div>\n        </div>\n    );\n}\n\nfor (var index in data) {\n    //console.log(data[index]);\n} \n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","const Example1 = (props) => {\n\n    return (\n        <div className={\"pc-ex pc-ex--1\"}>\n            <div>Example 1: </div>\n            {props.children}\n            <div className={\"pc-ex__stamp\"}></div>\n        </div>\n    )\n}\n\nexport const Example2 = (props) => {\n\n    return (\n        <div className={\"pc-ex pc-ex--2\"}>\n            <div>Example 2: </div>\n            {props.children}\n            <div className={\"pc-ex__stamp\"}></div>\n        </div>\n    )\n}\n\nexport const Example3 = (props) => {\n\n    return (\n        <div className={\"pc-ex pc-ex--3\"}>\n            <div>Example 3: </div>\n            {props.children}\n            <div className={\"pc-ex__stamp\"}></div>\n        </div>\n    )\n}\n\nexport default Example1;"],"sourceRoot":""}